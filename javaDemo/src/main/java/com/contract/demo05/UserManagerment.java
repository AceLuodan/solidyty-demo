package com.contract.demo05;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;

import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.*;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 3.6.0.
 */
public class UserManagerment extends Contract {
    private static final String BINARY = "";

    public static final String FUNC_CHECKREGISTER = "checkRegister";

    public static final String FUNC_DOLOGIN = "doLogin";

    public static final String FUNC_GETALLUSERINFOS = "getAllUserInfos";

    public static final String FUNC_GETTOTALUSERNUM = "getTotalUserNum";

    public static final String FUNC_GETUSERINFOBYUSERNAME = "getUserInfoByUserName";

    public static final String FUNC_REGISTER = "register";

    public static final String FUNC_UPDATEPASSWORD = "updatePassword";

    @Deprecated
    protected UserManagerment(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected UserManagerment(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected UserManagerment(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected UserManagerment(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<UserManagerment> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(UserManagerment.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    public static RemoteCall<UserManagerment> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(UserManagerment.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<UserManagerment> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(UserManagerment.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<UserManagerment> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(UserManagerment.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }

    /**
     * 是否注册
     * @param userName 账号
     * @return
     */
    public RemoteCall<Bool> checkRegister(String userName) {
        final Function function = new Function(
                FUNC_CHECKREGISTER,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(userName)),
                Arrays.<TypeReference<?>>asList(
                        new TypeReference<Bool>(){}
                        )
        );
        return executeRemoteCallSingleValueReturn(function);
    }

    /**
     * 登录
     * @param userName
     * @param password
     * @return
     */
    public RemoteCall<Bool> doLogin(String userName, String password) {
        final Function function = new Function(
                FUNC_DOLOGIN,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(userName),
                new org.web3j.abi.datatypes.Utf8String(password)),
                Arrays.<TypeReference<?>>asList(
                        new TypeReference<Bool>(){}
                        )
        );
        return executeRemoteCallSingleValueReturn(function);
    }

    /**
     * 根据索引获取用户信息
     * @param index
     * @return
     */
    public RemoteCall<List<Type>> getAllUserInfos(int index) {
        final Function function = new Function(
                FUNC_GETALLUSERINFOS,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(index)),
                Arrays.<TypeReference<?>>asList(
                        new TypeReference<Address>() {},
                        new TypeReference<Utf8String>() {}
                        )
        );
        return executeRemoteCallMultipleValueReturn(function);
    }


    /**
     * 获取注册用户总数
     * @return
     */
    public RemoteCall<Uint256> getTotalUserNum() {
        final Function function = new Function(
                FUNC_GETTOTALUSERNUM,
                Arrays.<Type>asList(),
                Arrays.asList(
                    new TypeReference<Uint256>() {}
                )
        );
        return executeRemoteCallSingleValueReturn(function);
    }

    /**
     * 根据用户名获取用户信息
     * @param userName
     * @return
     */
    public RemoteCall<List<Type>> getUserInfoByUserName(String userName) {
        final Function function = new Function(
                FUNC_GETUSERINFOBYUSERNAME,
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(userName)),
                Arrays.asList(
                        new TypeReference<Address>() {},
                        new TypeReference<Utf8String>() {}
                )
        );
        return executeRemoteCallMultipleValueReturn(function);
    }

    /**
     * 注册
     * @param ethAddr
     * @param userName
     * @param password
     * @return
     */
    public RemoteCall<Bool> register(String ethAddr, String userName, String password) {
        final Function function = new Function(
                FUNC_REGISTER,
                Arrays.<Type>asList(
                        new org.web3j.abi.datatypes.Address(ethAddr),
                        new org.web3j.abi.datatypes.Utf8String(userName),
                        new org.web3j.abi.datatypes.Utf8String(password)),
                Arrays.asList(
                        new TypeReference<Bool>() {
                        }
                )
        );
        return executeRemoteCallSingleValueReturn(function);
    }

    /**
     * 修改密码
     * @param userName
     * @param newPwd
     * @return
     */
    public RemoteCall<TransactionReceipt> updatePassword(String userName, String newPwd) {
        final Function function = new Function(
                FUNC_UPDATEPASSWORD,
                Arrays.<Type>asList(
                        new org.web3j.abi.datatypes.Utf8String(userName),
                        new org.web3j.abi.datatypes.Utf8String(newPwd)
                ),
                Collections.<TypeReference<?>>emptyList()
        );
        return executeRemoteCallTransaction(function);
    }

    @Deprecated
    public static UserManagerment load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new UserManagerment(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static UserManagerment load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new UserManagerment(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static UserManagerment load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new UserManagerment(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static UserManagerment load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new UserManagerment(contractAddress, web3j, transactionManager, contractGasProvider);
    }
}
